{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Asa/Misaina/Formation/resto-menu/src/pages/RestaurantListPage.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Airtable from 'airtable';\nimport ReastaurantElement from \"../components/ReastaurantElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class RestaurantListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: []\n    };\n  }\n\n  componentDidMount() {\n    var base = new Airtable({\n      apiKey: 'key5hCfcpO5JBNaYj'\n    }).base('appukpTZGXJdELj61');\n    const restaurants = [];\n    const setState = this.setState;\n    base('Restaurants').select({\n      // Selecting the first 3 records in Grid view:\n      maxRecords: 3,\n      view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {\n      // This function (`page`) will get called for each page of records.\n      try {\n        const restaurant = {};\n        records.forEach(function (record) {\n          restaurant.name = record.get('Nom');\n          restaurant.description = record.get('Adresse');\n          const images = record.get('Images');\n\n          if (images && images.length > 0) {\n            restaurant.image = images[0].url;\n          }\n\n          restaurants.push(restaurant);\n        }); // To fetch the next page of records, call `fetchNextPage`.\n        // If there are more records, `page` will get called again.\n        // If there are no more records, `done` will get called.\n\n        fetchNextPage();\n      } catch (err) {// return;\n      }\n    }, function done(err) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      setState({\n        restaurants\n      });\n    });\n  }\n\n  render() {\n    const {\n      restaurants\n    } = this.state;\n    console.log(restaurants);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: restaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ReastaurantElement, {\n            name: restaurant.name,\n            description: restaurant.description,\n            image: restaurant.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"names":["React","Component","Col","Row","Airtable","ReastaurantElement","RestaurantListPage","constructor","props","state","restaurants","componentDidMount","base","apiKey","setState","select","maxRecords","view","eachPage","page","records","fetchNextPage","restaurant","forEach","record","name","get","description","images","length","image","url","push","err","done","console","error","render","log","map","index"],"sources":["/Volumes/Data/Asa/Misaina/Formation/resto-menu/src/pages/RestaurantListPage.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Airtable from 'airtable';\nimport ReastaurantElement from \"../components/ReastaurantElement\";\n\nexport default class RestaurantListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      restaurants: [],\n    };\n  }\n\n  componentDidMount() {\n    var base = new Airtable({apiKey: 'key5hCfcpO5JBNaYj'}).base('appukpTZGXJdELj61');\n    const restaurants = [];\n    const setState = this.setState;\n\n    base('Restaurants').select({\n        // Selecting the first 3 records in Grid view:\n        maxRecords: 3,\n        view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {\n        // This function (`page`) will get called for each page of records.\n\n        try {\n          const restaurant = {};\n          records.forEach(function(record) {\n            restaurant.name = record.get('Nom');\n            restaurant.description = record.get('Adresse');\n            const images = record.get('Images');\n            if(images && images.length > 0) {\n              restaurant.image = images[0].url;\n            }\n  \n            restaurants.push(restaurant);\n          });\n  \n  \n          // To fetch the next page of records, call `fetchNextPage`.\n          // If there are more records, `page` will get called again.\n          // If there are no more records, `done` will get called.\n          fetchNextPage();\n        } catch(err) {\n          // return;\n        }\n\n    }, function done(err) {\n        if (err) { console.error(err); return; }\n        setState({ restaurants });\n    });\n\n  }\n\n  render() {\n    const { restaurants } = this.state;\n    console.log(restaurants);\n    return (\n      <>\n        <Row>\n            {restaurants.map((restaurant, index) => (\n              <Col md={3} key={index}>\n                <ReastaurantElement\n                  name={restaurant.name}\n                  description={restaurant.description}\n                  image={restaurant.image}\n                />\n              </Col>\n            ))}\n        </Row>\n      </>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;;AAEA,eAAe,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;EACxDM,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACXC,WAAW,EAAE;IADF,CAAb;EAGD;;EAEDC,iBAAiB,GAAG;IAClB,IAAIC,IAAI,GAAG,IAAIR,QAAJ,CAAa;MAACS,MAAM,EAAE;IAAT,CAAb,EAA4CD,IAA5C,CAAiD,mBAAjD,CAAX;IACA,MAAMF,WAAW,GAAG,EAApB;IACA,MAAMI,QAAQ,GAAG,KAAKA,QAAtB;IAEAF,IAAI,CAAC,aAAD,CAAJ,CAAoBG,MAApB,CAA2B;MACvB;MACAC,UAAU,EAAE,CAFW;MAGvBC,IAAI,EAAE;IAHiB,CAA3B,EAIGC,QAJH,CAIY,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;MAC9C;MAEA,IAAI;QACF,MAAMC,UAAU,GAAG,EAAnB;QACAF,OAAO,CAACG,OAAR,CAAgB,UAASC,MAAT,EAAiB;UAC/BF,UAAU,CAACG,IAAX,GAAkBD,MAAM,CAACE,GAAP,CAAW,KAAX,CAAlB;UACAJ,UAAU,CAACK,WAAX,GAAyBH,MAAM,CAACE,GAAP,CAAW,SAAX,CAAzB;UACA,MAAME,MAAM,GAAGJ,MAAM,CAACE,GAAP,CAAW,QAAX,CAAf;;UACA,IAAGE,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAA7B,EAAgC;YAC9BP,UAAU,CAACQ,KAAX,GAAmBF,MAAM,CAAC,CAAD,CAAN,CAAUG,GAA7B;UACD;;UAEDrB,WAAW,CAACsB,IAAZ,CAAiBV,UAAjB;QACD,CATD,EAFE,CAcF;QACA;QACA;;QACAD,aAAa;MACd,CAlBD,CAkBE,OAAMY,GAAN,EAAW,CACX;MACD;IAEJ,CA7BD,EA6BG,SAASC,IAAT,CAAcD,GAAd,EAAmB;MAClB,IAAIA,GAAJ,EAAS;QAAEE,OAAO,CAACC,KAAR,CAAcH,GAAd;QAAoB;MAAS;;MACxCnB,QAAQ,CAAC;QAAEJ;MAAF,CAAD,CAAR;IACH,CAhCD;EAkCD;;EAED2B,MAAM,GAAG;IACP,MAAM;MAAE3B;IAAF,IAAkB,KAAKD,KAA7B;IACA0B,OAAO,CAACG,GAAR,CAAY5B,WAAZ;IACA,oBACE;MAAA,uBACE,QAAC,GAAD;QAAA,UACKA,WAAW,CAAC6B,GAAZ,CAAgB,CAACjB,UAAD,EAAakB,KAAb,kBACf,QAAC,GAAD;UAAK,EAAE,EAAE,CAAT;UAAA,uBACE,QAAC,kBAAD;YACE,IAAI,EAAElB,UAAU,CAACG,IADnB;YAEE,WAAW,EAAEH,UAAU,CAACK,WAF1B;YAGE,KAAK,EAAEL,UAAU,CAACQ;UAHpB;YAAA;YAAA;YAAA;UAAA;QADF,GAAiBU,KAAjB;UAAA;UAAA;UAAA;QAAA,QADD;MADL;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EAeD;;AApEuD"},"metadata":{},"sourceType":"module"}