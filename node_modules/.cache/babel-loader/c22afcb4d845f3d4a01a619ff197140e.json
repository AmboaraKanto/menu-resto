{"ast":null,"code":"import Airtable from \"airtable\";\nexport default function retrieveRestaurantList(callback) {\n  var base = new Airtable({\n    apiKey: \"key5hCfcpO5JBNaYj\"\n  }).base(\"appukpTZGXJdELj61\");\n  const restaurants = [];\n  let error;\n  base(\"Restaurants\").select({\n    // Selecting the first 3 records in Grid view:\n    //   maxRecords: 3,\n    view: \"Grid view\"\n  }).eachPage(function page(records, fetchNextPage) {\n    // This function (`page`) will get called for each page of records.\n    try {\n      records.forEach(function (record) {\n        const restaurant = {};\n        restaurant.id = record.get(\"Id\");\n        console.log(restaurant.id);\n        restaurant.name = record.get(\"Nom\");\n        restaurant.description = record.get(\"Adresse\");\n        const images = record.get(\"Images\");\n\n        if (images && images.length > 0) {\n          restaurant.image = images[0].url;\n        }\n\n        restaurants.push(restaurant);\n      }); // To fetch the next page of records, call `fetchNextPage`.\n      // If there are more records, `page` will get called again.\n      // If there are no more records, `done` will get called.\n\n      fetchNextPage();\n    } catch (err) {\n      error = err;\n      return;\n    }\n  }, function done(err) {\n    if (err) {\n      console.error(err);\n      return;\n    }\n\n    callback(error, restaurants);\n  });\n}","map":{"version":3,"names":["Airtable","retrieveRestaurantList","callback","base","apiKey","restaurants","error","select","view","eachPage","page","records","fetchNextPage","forEach","record","restaurant","id","get","console","log","name","description","images","length","image","url","push","err","done"],"sources":["/Volumes/Data/Asa/Misaina/Formation/resto-menu/src/dataLoaders/retrieveRestaurantList.js"],"sourcesContent":["import Airtable from \"airtable\";\n\nexport default function retrieveRestaurantList(callback) {\n  var base = new Airtable({ apiKey: \"key5hCfcpO5JBNaYj\" }).base(\n    \"appukpTZGXJdELj61\"\n  );\n  const restaurants = [];\n  let error;\n\n  base(\"Restaurants\")\n    .select({\n      // Selecting the first 3 records in Grid view:\n    //   maxRecords: 3,\n      view: \"Grid view\",\n    })\n    .eachPage(\n      function page(records, fetchNextPage) {\n        // This function (`page`) will get called for each page of records.\n\n        try {\n          records.forEach(function (record) {\n            const restaurant = {};\n            restaurant.id = record.get(\"Id\");\n            console.log(restaurant.id);\n            restaurant.name = record.get(\"Nom\");\n            restaurant.description = record.get(\"Adresse\");\n            const images = record.get(\"Images\");\n            if (images && images.length > 0) {\n              restaurant.image = images[0].url;\n            }\n            restaurants.push(restaurant);\n          });\n\n          // To fetch the next page of records, call `fetchNextPage`.\n          // If there are more records, `page` will get called again.\n          // If there are no more records, `done` will get called.\n          fetchNextPage();\n        } catch (err) {\n          error = err;\n          return;\n        }\n      },\n      function done(err) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        callback(error, restaurants);\n      }\n    );\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C;EACvD,IAAIC,IAAI,GAAG,IAAIH,QAAJ,CAAa;IAAEI,MAAM,EAAE;EAAV,CAAb,EAA8CD,IAA9C,CACT,mBADS,CAAX;EAGA,MAAME,WAAW,GAAG,EAApB;EACA,IAAIC,KAAJ;EAEAH,IAAI,CAAC,aAAD,CAAJ,CACGI,MADH,CACU;IACN;IACF;IACEC,IAAI,EAAE;EAHA,CADV,EAMGC,QANH,CAOI,SAASC,IAAT,CAAcC,OAAd,EAAuBC,aAAvB,EAAsC;IACpC;IAEA,IAAI;MACFD,OAAO,CAACE,OAAR,CAAgB,UAAUC,MAAV,EAAkB;QAChC,MAAMC,UAAU,GAAG,EAAnB;QACAA,UAAU,CAACC,EAAX,GAAgBF,MAAM,CAACG,GAAP,CAAW,IAAX,CAAhB;QACAC,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACC,EAAvB;QACAD,UAAU,CAACK,IAAX,GAAkBN,MAAM,CAACG,GAAP,CAAW,KAAX,CAAlB;QACAF,UAAU,CAACM,WAAX,GAAyBP,MAAM,CAACG,GAAP,CAAW,SAAX,CAAzB;QACA,MAAMK,MAAM,GAAGR,MAAM,CAACG,GAAP,CAAW,QAAX,CAAf;;QACA,IAAIK,MAAM,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAA9B,EAAiC;UAC/BR,UAAU,CAACS,KAAX,GAAmBF,MAAM,CAAC,CAAD,CAAN,CAAUG,GAA7B;QACD;;QACDpB,WAAW,CAACqB,IAAZ,CAAiBX,UAAjB;MACD,CAXD,EADE,CAcF;MACA;MACA;;MACAH,aAAa;IACd,CAlBD,CAkBE,OAAOe,GAAP,EAAY;MACZrB,KAAK,GAAGqB,GAAR;MACA;IACD;EACF,CAhCL,EAiCI,SAASC,IAAT,CAAcD,GAAd,EAAmB;IACjB,IAAIA,GAAJ,EAAS;MACPT,OAAO,CAACZ,KAAR,CAAcqB,GAAd;MACA;IACD;;IACDzB,QAAQ,CAACI,KAAD,EAAQD,WAAR,CAAR;EACD,CAvCL;AAyCD"},"metadata":{},"sourceType":"module"}